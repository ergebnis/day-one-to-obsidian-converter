<?xml version="1.0" encoding="UTF-8"?>
<files psalm-version="5.18.0@b113f3ed0259fd6e212d87c3df80eec95a6abf19">
  <file src="src/Inside/Domain/DayOne/Journal.php">
    <MixedArgumentTypeCoercion>
      <code>$tags</code>
    </MixedArgumentTypeCoercion>
  </file>
  <file src="src/Inside/Domain/DayOneToObsidian/Text/TextProcessorPipeline.php">
    <MixedPropertyTypeCoercion>
      <code>$textProcessors</code>
    </MixedPropertyTypeCoercion>
  </file>
  <file src="src/Inside/Domain/Shared/FileName.php">
    <ImpureMethodCall>
      <code>empty</code>
    </ImpureMethodCall>
  </file>
  <file src="src/Outside/Adapter/Primary/Console/ConvertCommand.php">
    <MixedArgument>
      <code>$dayOnePhotos</code>
    </MixedArgument>
  </file>
  <file src="src/Outside/Adapter/Secondary/DayOne/JournalFinder.php">
    <MixedReturnTypeCoercion>
      <code><![CDATA[\array_reduce(
            $files,
            static function (array $dayOneJournals, string $file) use ($dayOneJournalReader): array {
                if (!\is_file($file)) {
                    return $dayOneJournals;
                }

                try {
                    $dayOneJournal = $dayOneJournalReader->read(Inside\Domain\Shared\File::create(Inside\Domain\Shared\Path::fromString($file)));
                } catch (Inside\Port\Secondary\DayOne\FileDoesNotContainJson|Inside\Port\Secondary\DayOne\FileDoesNotContainJsonValidAccordingToSchema) {
                    return $dayOneJournals;
                }

                $dayOneJournals[] = $dayOneJournal;

                return $dayOneJournals;
            },
            [],
        )]]></code>
      <code>array</code>
    </MixedReturnTypeCoercion>
  </file>
  <file src="src/Outside/Adapter/Secondary/DayOne/JournalReader.php">
    <MixedArgument>
      <code>$entry</code>
      <code><![CDATA[$entry['creationDate']]]></code>
      <code><![CDATA[$entry['modifiedDate']]]></code>
      <code><![CDATA[$entry['tags']]]></code>
      <code><![CDATA[$entry['timeZone']]]></code>
      <code><![CDATA[$entry['uuid']]]></code>
      <code><![CDATA[$photo['identifier']]]></code>
      <code><![CDATA[$photo['md5']]]></code>
      <code><![CDATA[$photo['type']]]></code>
      <code>$text</code>
      <code><![CDATA[$this->dataNormalizer->normalize($data)]]></code>
    </MixedArgument>
    <MixedArrayAccess>
      <code><![CDATA[$data['entries']]]></code>
      <code><![CDATA[$entry['creationDate']]]></code>
      <code><![CDATA[$entry['timeZone']]]></code>
      <code><![CDATA[$photo['identifier']]]></code>
      <code><![CDATA[$photo['md5']]]></code>
      <code><![CDATA[$photo['type']]]></code>
    </MixedArrayAccess>
    <MixedAssignment>
      <code>$data</code>
      <code>$entry</code>
      <code>$photo</code>
      <code>$text</code>
    </MixedAssignment>
  </file>
  <file src="src/Outside/Infrastructure/DataNormalizer.php">
    <MissingParamType>
      <code>$data</code>
    </MissingParamType>
    <MissingReturnType>
      <code>normalize</code>
    </MissingReturnType>
    <MixedAssignment>
      <code>$data[$key]</code>
      <code>$value</code>
    </MixedAssignment>
    <TypeDoesNotContainType>
      <code>$keys === $stringKeys</code>
    </TypeDoesNotContainType>
  </file>
  <file src="test/Integration/Outside/Adapter/Primary/Console/ConvertCommandTest.php">
    <PossiblyNullArgument>
      <code><![CDATA[$convertCommand->getName()]]></code>
    </PossiblyNullArgument>
  </file>
  <file src="test/Unit/Inside/Domain/DayOne/EntryTest.php">
    <MixedArgument>
      <code><![CDATA[$faker->fileExtension()]]></code>
    </MixedArgument>
    <MixedArgumentTypeCoercion>
      <code><![CDATA[$faker->words()]]></code>
    </MixedArgumentTypeCoercion>
    <PossiblyInvalidArgument>
      <code><![CDATA[$faker->sentences()]]></code>
    </PossiblyInvalidArgument>
    <TooManyArguments>
      <code><![CDATA[static function () use ($faker): Inside\Domain\DayOne\Tag {
            return Inside\Domain\DayOne\Tag::fromString($faker->word());
        }]]></code>
    </TooManyArguments>
  </file>
  <file src="test/Unit/Inside/Domain/DayOne/JournalTest.php">
    <MixedArgument>
      <code><![CDATA[$faker->fileExtension()]]></code>
      <code><![CDATA[$faker->fileExtension()]]></code>
      <code><![CDATA[$faker->fileExtension()]]></code>
      <code><![CDATA[$faker->fileExtension()]]></code>
      <code><![CDATA[$faker->fileExtension()]]></code>
      <code><![CDATA[$faker->fileExtension()]]></code>
      <code><![CDATA[$faker->fileExtension()]]></code>
      <code><![CDATA[$faker->fileExtension()]]></code>
    </MixedArgument>
    <MixedArgumentTypeCoercion>
      <code><![CDATA[$faker->words()]]></code>
      <code><![CDATA[$faker->words()]]></code>
    </MixedArgumentTypeCoercion>
    <PossiblyInvalidArgument>
      <code><![CDATA[$faker->sentences()]]></code>
      <code><![CDATA[$faker->sentences()]]></code>
    </PossiblyInvalidArgument>
    <TooManyArguments>
      <code><![CDATA[static function () use ($faker): Inside\Domain\DayOne\Tag {
            return Inside\Domain\DayOne\Tag::fromString($faker->word());
        }]]></code>
      <code><![CDATA[static function () use ($faker): Inside\Domain\DayOne\Tag {
            return Inside\Domain\DayOne\Tag::fromString($faker->word());
        }]]></code>
    </TooManyArguments>
  </file>
  <file src="test/Unit/Inside/Domain/DayOne/PhotoTest.php">
    <MixedArgument>
      <code><![CDATA[$faker->fileExtension()]]></code>
      <code><![CDATA[$faker->fileExtension()]]></code>
    </MixedArgument>
  </file>
  <file src="test/Unit/Inside/Domain/DayOneToObsidian/File/DefaultObsidianAttachmentFileMapperTest.php">
    <MixedArgument>
      <code><![CDATA[$faker->fileExtension()]]></code>
      <code><![CDATA[$faker->fileExtension()]]></code>
    </MixedArgument>
  </file>
  <file src="test/Unit/Inside/Domain/DayOneToObsidian/File/DefaultObsidianNoteFileMapperTest.php">
    <MixedArgument>
      <code><![CDATA[$faker->fileExtension()]]></code>
      <code><![CDATA[$faker->fileExtension()]]></code>
    </MixedArgument>
    <PossiblyUnusedMethod>
      <code>provideOriginalJournalFileNameWithoutExtensionAndModifiedJournalFileNameWithoutExtension</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="test/Unit/Inside/Domain/DayOneToObsidian/Text/ReplaceMarkdownLinksToDayOneEntriesWithMarkdownLinksToObsidianNotesTest.php">
    <MixedArgument>
      <code><![CDATA[$faker->fileExtension()]]></code>
    </MixedArgument>
  </file>
  <file src="test/Unit/Inside/Domain/DayOneToObsidian/Text/ReplaceMarkdownLinksToDayOnePhotosWithInternalLinksToObsidianAttachmentsTest.php">
    <MixedArgument>
      <code><![CDATA[$faker->fileExtension()]]></code>
      <code><![CDATA[$faker->fileExtension()]]></code>
      <code><![CDATA[$faker->fileExtension()]]></code>
    </MixedArgument>
  </file>
  <file src="test/Unit/Inside/Domain/DayOneToObsidian/Text/TextProcessorPipelineTest.php">
    <MixedArgumentTypeCoercion>
      <code>$suffixes</code>
    </MixedArgumentTypeCoercion>
    <PossiblyInvalidArgument>
      <code>$suffixes</code>
    </PossiblyInvalidArgument>
  </file>
  <file src="test/Unit/Inside/Domain/Obsidian/FrontMatterTest.php">
    <MixedArgumentTypeCoercion>
      <code><![CDATA[$faker->words()]]></code>
    </MixedArgumentTypeCoercion>
    <PossiblyInvalidArgument>
      <code><![CDATA[$faker->sentences()]]></code>
    </PossiblyInvalidArgument>
  </file>
  <file src="test/Unit/Inside/Domain/Obsidian/NoteTest.php">
    <MixedArgument>
      <code><![CDATA[$faker->fileExtension()]]></code>
    </MixedArgument>
    <MixedArgumentTypeCoercion>
      <code><![CDATA[$faker->words()]]></code>
    </MixedArgumentTypeCoercion>
    <PossiblyInvalidArgument>
      <code><![CDATA[$faker->sentences()]]></code>
    </PossiblyInvalidArgument>
  </file>
  <file src="test/Unit/Inside/Domain/Shared/ExtensionTest.php">
    <MixedArgument>
      <code><![CDATA[$faker->fileExtension()]]></code>
      <code><![CDATA[$faker->fileExtension()]]></code>
      <code>$value</code>
      <code>$value</code>
    </MixedArgument>
    <MixedAssignment>
      <code>$value</code>
      <code>$value</code>
    </MixedAssignment>
  </file>
  <file src="test/Unit/Inside/Domain/Shared/FileNameTest.php">
    <MixedArgument>
      <code><![CDATA[$faker->fileExtension()]]></code>
    </MixedArgument>
    <PossiblyUnusedMethod>
      <code>provideValueFileNameWithoutExtensionsAndExtension</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="test/Unit/Inside/Domain/Shared/FileTest.php">
    <MixedArgument>
      <code><![CDATA[$faker->fileExtension()]]></code>
    </MixedArgument>
  </file>
  <file src="test/Unit/Inside/Domain/Shared/PathTest.php">
    <MixedArgument>
      <code><![CDATA[$faker->fileExtension()]]></code>
    </MixedArgument>
    <PossiblyUnusedMethod>
      <code>providePath</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="test/Unit/Outside/Adapter/Secondary/Obsidian/NoteWriterTest.php">
    <MixedArgument>
      <code><![CDATA[$faker->fileExtension()]]></code>
      <code><![CDATA[$faker->fileExtension()]]></code>
      <code><![CDATA[$faker->fileExtension()]]></code>
      <code><![CDATA[$faker->fileExtension()]]></code>
    </MixedArgument>
  </file>
</files>
